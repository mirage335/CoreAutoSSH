#!/usr/bin/env bash

#Consider creating specialized git repositories as follows.

workingDir="$PWD"

# ATTENTION: Configure "$netName".
export netName=default
mkdir -p "$workingDir"/"$netName"
cd "$workingDir"/"$netName"

mkdir ./_lib
mkdir ./_prog

git init

# ATTENTION: Configure source.
git submodule add --depth 1 git@github.com:mirage335/CoreAutoSSH.git ./_lib/coreautossh
cd ./_lib/coreautossh ; git fetch --shallow-exclude=v3.0 ; git reset --hard
cd "$workingDir"/"$netName"

git config -f .gitmodules submodule._lib/coreautossh.shallow true


#Parent derivative of ubiquitous_bash.
cd ./_lib/coreautossh
git submodule update --depth 1 --init ./_lib/ubiquitous_bash
cd ./_lib/ubiquitous_bash ; git fetch --shallow-exclude=v3.0 ; git reset --hard
cd "$workingDir"/"$netName"

#git submodule update --init --recursive

cp ./_lib/coreautossh/cautossh ./
cp ./_lib/coreautossh/compile.sh ./
cp ./_lib/coreautossh/README.md ./
cp ./_lib/coreautossh/USAGE.html ./
cp ./_lib/coreautossh/TiddlySaver.jar ./

##### Hardcoded Configuration
mkdir -p ./_config
cp -a ./_lib/coreautossh/_lib/ubiquitous_bash/_config/. ./_config

##### Parent Derivative Scripts
mkdir -p ./_prog
cp -a ./_lib/coreautossh/_prog/. ./_prog

##### Runtime Configuration
mkdir -p ./_local/ssh

#Parent derivative of ubiquitous_bash.
cp ./_lib/coreautossh/_lib/ubiquitous_bash/_lib/ssh/ops.sh ./_local/ssh/ops.sh

##### Kits (ssh, default)
cp -r ./_lib/coreautossh/_lib/ubiquitous_bash/_lib/kit/ssh/. ./

#cp -a ./_lib/coreautossh/_local ./

##### Specialized project scripts.
cp ./_lib/coreautossh/upgrade ./
#cp ./_lib/coreautossh/fork ./


##### Anchor .

cp -a ./_lib/coreautossh/_lib/ubiquitous_bash/_anchor.bat ./
cp -a ./_lib/coreautossh/_lib/ubiquitous_bash/_anchor ./

chmod u+x ./_anchor.bat
chmod u+x ./_anchor

./cautossh _anchor


./compile.sh

git add .
git commit -a -m "first commit"
