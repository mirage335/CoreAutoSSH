#!/usr/bin/env bash

#Maintains updated Core Auto SSH assets as git submodules. Manual merging of some configuration files may still be required.

#Consider creating specialized git repositories as follows.

#export netName=default
#mkdir -p "$netName"
#cd "$netName"

#git init
#git add .
#git commit -a -m "first commit"

#mkdir _lib

#git submodule add git@github.com:mirage335/CoreAutoSSH.git ./_lib/coreautossh
#git submodule add --force git@github.com:mirage335/Ubiquitous_Bash.git ./_lib/ubiquitous_bash

#git submodule update --init --recursive



#Suitable for allowing scripts to find other scripts they depend on. May look like an ugly hack, but it has proven reliable over the years.
_getScriptAbsoluteLocation() {
	local absoluteLocation
	if [[ (-e $PWD\/$0) && ($0 != "") ]] && [[ "$1" != "/"* ]]
			then
	absoluteLocation="$PWD"\/"$0"
	absoluteLocation=$(realpath -L -s "$absoluteLocation")
			else
	absoluteLocation=$(realpath -L "$0")
	fi

	if [[ -h "$absoluteLocation" ]]
			then
	absoluteLocation=$(readlink -f "$absoluteLocation")
	absoluteLocation=$(realpath -L "$absoluteLocation")
	fi
	echo $absoluteLocation
}
alias getScriptAbsoluteLocation=_getScriptAbsoluteLocation

#Retrieves absolute path of current script, while maintaining symlinks, even when "./" would translate with "readlink -f" into something disregarding symlinked components in $PWD.
#Suitable for allowing scripts to find other scripts they depend on.
_getScriptAbsoluteFolder() {
	dirname "$(_getScriptAbsoluteLocation)"
}
alias getScriptAbsoluteFolder=_getScriptAbsoluteFolder

#Retrieves absolute path of parameter, while maintaining symlinks, even when "./" would translate with "readlink -f" into something disregarding symlinked components in $PWD.
#Suitable for finding absolute paths, when it is desirable not to interfere with symlink specified folder structure.
_getAbsoluteLocation() {
	if [[ "$1" == "" ]]
	then
		echo
		return
	fi
	
	local absoluteLocation
	if [[ (-e $PWD\/$1) && ($1 != "") ]] && [[ "$1" != "/"* ]]
			then
	absoluteLocation="$PWD"\/"$1"
	absoluteLocation=$(realpath -L -s "$absoluteLocation")
			else
	absoluteLocation=$(realpath -L "$1")
	fi
	echo $absoluteLocation
}
alias getAbsoluteLocation=_getAbsoluteLocation

#Retrieves absolute path of parameter, while maintaining symlinks, even when "./" would translate with "readlink -f" into something disregarding symlinked components in $PWD.
#Suitable for finding absolute paths, when it is desirable not to interfere with symlink specified folder structure.
_getAbsoluteFolder() {
	local absoluteLocation=$(_getAbsoluteLocation "$1")
	dirname "$absoluteLocation"
}
alias getAbsoluteLocation=_getAbsoluteLocation

export scriptLocation="$(_getScriptAbsoluteFolder)"

cd "$scriptLocation"/_lib/coreautossh/_lib/ubiquitous_bash
git pull

cd "$scriptLocation"/_lib/coreautossh
git pull

cd "$scriptLocation"

cp -a ./_lib/coreautossh/_prog ./

#cp -d --preserve=all ./_lib/coreautossh/cautossh ./
cp -d --preserve=all ./_lib/coreautossh/update ./
cp -d --preserve=all ./_lib/coreautossh/compile ./

./compile








